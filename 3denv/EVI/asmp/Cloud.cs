// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/asmp/cloud.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asmp.Cloud {

  /// <summary>Holder for reflection information generated from protobuf/asmp/cloud.proto</summary>
  public static partial class CloudReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/asmp/cloud.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CloudReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chlwcm90b2J1Zi9hc21wL2Nsb3VkLnByb3RvEgphc21wLmNsb3VkIoUBCgdN",
            "ZXNzYWdlEg4KBnRpbWVfcxgBIAEoARIzCg1yb2FkX3NlZ21lbnRzGAIgAygL",
            "MhwuYXNtcC5jbG91ZC5Sb2FkU2VnbWVudFN0YXRlEjUKDnRyYWZmaWNfbGln",
            "aHRzGAMgAygLMh0uYXNtcC5jbG91ZC5UcmFmZmljTGlnaHRTdGF0ZSJMChBS",
            "b2FkU2VnbWVudFN0YXRlEgoKAmlkGAEgASgNEhQKDG51bV92ZWhpY2xlcxgC",
            "IAEoDRIWCg5tZWFuX3NwZWVkX21wcxgDIAEoAiLdAQoRVHJhZmZpY0xpZ2h0",
            "U3RhdGUSCgoCaWQYASABKA0SQQoOY3VycmVudF9zaWduYWwYAiABKA4yKS5h",
            "c21wLmNsb3VkLlRyYWZmaWNMaWdodFN0YXRlLlNpZ25hbFN0YXRlEhwKFG1p",
            "bl90aW1lX3RvX3N3aXRjaF9zGAMgASgCEhwKFG1heF90aW1lX3RvX3N3aXRj",
            "aF9zGAQgASgCIj0KC1NpZ25hbFN0YXRlEgcKA1JFRBAAEg4KClJFRF9ZRUxM",
            "T1cQARIJCgVHUkVFThACEgoKBllFTExPVxADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Cloud.Message), global::Asmp.Cloud.Message.Parser, new[]{ "TimeS", "RoadSegments", "TrafficLights" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Cloud.RoadSegmentState), global::Asmp.Cloud.RoadSegmentState.Parser, new[]{ "Id", "NumVehicles", "MeanSpeedMps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Cloud.TrafficLightState), global::Asmp.Cloud.TrafficLightState.Parser, new[]{ "Id", "CurrentSignal", "MinTimeToSwitchS", "MaxTimeToSwitchS" }, null, new[]{ typeof(global::Asmp.Cloud.TrafficLightState.Types.SignalState) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// cloud report message wrapper
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Cloud.CloudReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message(Message other) : this() {
      timeS_ = other.timeS_;
      roadSegments_ = other.roadSegments_.Clone();
      trafficLights_ = other.trafficLights_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "time_s" field.</summary>
    public const int TimeSFieldNumber = 1;
    private double timeS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeS {
      get { return timeS_; }
      set {
        timeS_ = value;
      }
    }

    /// <summary>Field number for the "road_segments" field.</summary>
    public const int RoadSegmentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Asmp.Cloud.RoadSegmentState> _repeated_roadSegments_codec
        = pb::FieldCodec.ForMessage(18, global::Asmp.Cloud.RoadSegmentState.Parser);
    private readonly pbc::RepeatedField<global::Asmp.Cloud.RoadSegmentState> roadSegments_ = new pbc::RepeatedField<global::Asmp.Cloud.RoadSegmentState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Asmp.Cloud.RoadSegmentState> RoadSegments {
      get { return roadSegments_; }
    }

    /// <summary>Field number for the "traffic_lights" field.</summary>
    public const int TrafficLightsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asmp.Cloud.TrafficLightState> _repeated_trafficLights_codec
        = pb::FieldCodec.ForMessage(26, global::Asmp.Cloud.TrafficLightState.Parser);
    private readonly pbc::RepeatedField<global::Asmp.Cloud.TrafficLightState> trafficLights_ = new pbc::RepeatedField<global::Asmp.Cloud.TrafficLightState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Asmp.Cloud.TrafficLightState> TrafficLights {
      get { return trafficLights_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeS, other.TimeS)) return false;
      if(!roadSegments_.Equals(other.roadSegments_)) return false;
      if(!trafficLights_.Equals(other.trafficLights_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeS);
      hash ^= roadSegments_.GetHashCode();
      hash ^= trafficLights_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeS);
      }
      roadSegments_.WriteTo(output, _repeated_roadSegments_codec);
      trafficLights_.WriteTo(output, _repeated_trafficLights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeS);
      }
      roadSegments_.WriteTo(ref output, _repeated_roadSegments_codec);
      trafficLights_.WriteTo(ref output, _repeated_trafficLights_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeS != 0D) {
        size += 1 + 8;
      }
      size += roadSegments_.CalculateSize(_repeated_roadSegments_codec);
      size += trafficLights_.CalculateSize(_repeated_trafficLights_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.TimeS != 0D) {
        TimeS = other.TimeS;
      }
      roadSegments_.Add(other.roadSegments_);
      trafficLights_.Add(other.trafficLights_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            TimeS = input.ReadDouble();
            break;
          }
          case 18: {
            roadSegments_.AddEntriesFrom(input, _repeated_roadSegments_codec);
            break;
          }
          case 26: {
            trafficLights_.AddEntriesFrom(input, _repeated_trafficLights_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            TimeS = input.ReadDouble();
            break;
          }
          case 18: {
            roadSegments_.AddEntriesFrom(ref input, _repeated_roadSegments_codec);
            break;
          }
          case 26: {
            trafficLights_.AddEntriesFrom(ref input, _repeated_trafficLights_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// cloud report of a single edge (= road segement)
  /// </summary>
  public sealed partial class RoadSegmentState : pb::IMessage<RoadSegmentState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoadSegmentState> _parser = new pb::MessageParser<RoadSegmentState>(() => new RoadSegmentState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoadSegmentState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Cloud.CloudReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadSegmentState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadSegmentState(RoadSegmentState other) : this() {
      id_ = other.id_;
      numVehicles_ = other.numVehicles_;
      meanSpeedMps_ = other.meanSpeedMps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadSegmentState Clone() {
      return new RoadSegmentState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "num_vehicles" field.</summary>
    public const int NumVehiclesFieldNumber = 2;
    private uint numVehicles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint NumVehicles {
      get { return numVehicles_; }
      set {
        numVehicles_ = value;
      }
    }

    /// <summary>Field number for the "mean_speed_mps" field.</summary>
    public const int MeanSpeedMpsFieldNumber = 3;
    private float meanSpeedMps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MeanSpeedMps {
      get { return meanSpeedMps_; }
      set {
        meanSpeedMps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoadSegmentState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoadSegmentState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NumVehicles != other.NumVehicles) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MeanSpeedMps, other.MeanSpeedMps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NumVehicles != 0) hash ^= NumVehicles.GetHashCode();
      if (MeanSpeedMps != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MeanSpeedMps);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (NumVehicles != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumVehicles);
      }
      if (MeanSpeedMps != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MeanSpeedMps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (NumVehicles != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(NumVehicles);
      }
      if (MeanSpeedMps != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MeanSpeedMps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (NumVehicles != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(NumVehicles);
      }
      if (MeanSpeedMps != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoadSegmentState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NumVehicles != 0) {
        NumVehicles = other.NumVehicles;
      }
      if (other.MeanSpeedMps != 0F) {
        MeanSpeedMps = other.MeanSpeedMps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            NumVehicles = input.ReadUInt32();
            break;
          }
          case 29: {
            MeanSpeedMps = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            NumVehicles = input.ReadUInt32();
            break;
          }
          case 29: {
            MeanSpeedMps = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// cloud report of a single traffic light
  /// </summary>
  public sealed partial class TrafficLightState : pb::IMessage<TrafficLightState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrafficLightState> _parser = new pb::MessageParser<TrafficLightState>(() => new TrafficLightState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrafficLightState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Cloud.CloudReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightState(TrafficLightState other) : this() {
      id_ = other.id_;
      currentSignal_ = other.currentSignal_;
      minTimeToSwitchS_ = other.minTimeToSwitchS_;
      maxTimeToSwitchS_ = other.maxTimeToSwitchS_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightState Clone() {
      return new TrafficLightState(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "current_signal" field.</summary>
    public const int CurrentSignalFieldNumber = 2;
    private global::Asmp.Cloud.TrafficLightState.Types.SignalState currentSignal_ = global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Cloud.TrafficLightState.Types.SignalState CurrentSignal {
      get { return currentSignal_; }
      set {
        currentSignal_ = value;
      }
    }

    /// <summary>Field number for the "min_time_to_switch_s" field.</summary>
    public const int MinTimeToSwitchSFieldNumber = 3;
    private float minTimeToSwitchS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MinTimeToSwitchS {
      get { return minTimeToSwitchS_; }
      set {
        minTimeToSwitchS_ = value;
      }
    }

    /// <summary>Field number for the "max_time_to_switch_s" field.</summary>
    public const int MaxTimeToSwitchSFieldNumber = 4;
    private float maxTimeToSwitchS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxTimeToSwitchS {
      get { return maxTimeToSwitchS_; }
      set {
        maxTimeToSwitchS_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrafficLightState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrafficLightState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CurrentSignal != other.CurrentSignal) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MinTimeToSwitchS, other.MinTimeToSwitchS)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxTimeToSwitchS, other.MaxTimeToSwitchS)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (CurrentSignal != global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red) hash ^= CurrentSignal.GetHashCode();
      if (MinTimeToSwitchS != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MinTimeToSwitchS);
      if (MaxTimeToSwitchS != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxTimeToSwitchS);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (CurrentSignal != global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CurrentSignal);
      }
      if (MinTimeToSwitchS != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MinTimeToSwitchS);
      }
      if (MaxTimeToSwitchS != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxTimeToSwitchS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (CurrentSignal != global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CurrentSignal);
      }
      if (MinTimeToSwitchS != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(MinTimeToSwitchS);
      }
      if (MaxTimeToSwitchS != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(MaxTimeToSwitchS);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (CurrentSignal != global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrentSignal);
      }
      if (MinTimeToSwitchS != 0F) {
        size += 1 + 4;
      }
      if (MaxTimeToSwitchS != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrafficLightState other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.CurrentSignal != global::Asmp.Cloud.TrafficLightState.Types.SignalState.Red) {
        CurrentSignal = other.CurrentSignal;
      }
      if (other.MinTimeToSwitchS != 0F) {
        MinTimeToSwitchS = other.MinTimeToSwitchS;
      }
      if (other.MaxTimeToSwitchS != 0F) {
        MaxTimeToSwitchS = other.MaxTimeToSwitchS;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            CurrentSignal = (global::Asmp.Cloud.TrafficLightState.Types.SignalState) input.ReadEnum();
            break;
          }
          case 29: {
            MinTimeToSwitchS = input.ReadFloat();
            break;
          }
          case 37: {
            MaxTimeToSwitchS = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 16: {
            CurrentSignal = (global::Asmp.Cloud.TrafficLightState.Types.SignalState) input.ReadEnum();
            break;
          }
          case 29: {
            MinTimeToSwitchS = input.ReadFloat();
            break;
          }
          case 37: {
            MaxTimeToSwitchS = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TrafficLightState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum SignalState {
        [pbr::OriginalName("RED")] Red = 0,
        /// <summary>
        /// Changing from red to green
        /// </summary>
        [pbr::OriginalName("RED_YELLOW")] RedYellow = 1,
        [pbr::OriginalName("GREEN")] Green = 2,
        /// <summary>
        /// Changing from green to red
        /// </summary>
        [pbr::OriginalName("YELLOW")] Yellow = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
