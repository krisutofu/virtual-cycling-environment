// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf/asmp/vehicle.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Asmp.Vehicle {

  /// <summary>Holder for reflection information generated from protobuf/asmp/vehicle.proto</summary>
  public static partial class VehicleReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf/asmp/vehicle.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VehicleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtwcm90b2J1Zi9hc21wL3ZlaGljbGUucHJvdG8SDGFzbXAudmVoaWNsZSK0",
            "AQoPVmVoaWNsZVBvc2l0aW9uEg8KB3JvYWRfaWQYASABKA0SDgoGc19mcmFj",
            "GAIgASgBEg8KB2xhbmVfaWQYBCABKA0SCgoCcHgYBSABKAESCgoCcHkYBiAB",
            "KAESDQoFYW5nbGUYByABKAESDgoGaGVpZ2h0GAggASgBEg0KBXNsb3BlGAkg",
            "ASgBEgsKA2xhdBgKIAEoARILCgNsb24YCyABKAESDwoHZWRnZV9pZBgMIAEo",
            "CSLPBQoMVmVoaWNsZVN0YXRlEi8KCHBvc2l0aW9uGAEgASgLMh0uYXNtcC52",
            "ZWhpY2xlLlZlaGljbGVQb3NpdGlvbhIRCglzcGVlZF9tcHMYAiABKAESOQoH",
            "c2lnbmFscxgDIAMoDjIoLmFzbXAudmVoaWNsZS5WZWhpY2xlU3RhdGUuVmVo",
            "aWNsZVNpZ25hbBISCgpzaWduYWxfc3VtGAQgASgNEj8KCnN0b3BzdGF0ZXMY",
            "BSADKA4yKy5hc21wLnZlaGljbGUuVmVoaWNsZVN0YXRlLlZlaGljbGVTdG9w",
            "U3RhdGUSFQoNc3RvcHN0YXRlX3N1bRgGIAEoDSKYAgoNVmVoaWNsZVNpZ25h",
            "bBIICgROT05FEAASEQoNQkxJTktFUl9SSUdIVBABEhAKDEJMSU5LRVJfTEVG",
            "VBACEhUKEUJMSU5LRVJfRU1FUkdFTkNZEAQSDgoKQlJFQUtMSUdIVBAIEg4K",
            "CkZST05UTElHSFQQEBIMCghGT0dMSUdIVBAgEgwKCEhJR0hCRUFNEEASDgoJ",
            "QkFDS0RSSVZFEIABEgoKBVdJUEVSEIACEhMKDkRPT1JfT1BFTl9MRUZUEIAE",
            "EhQKD0RPT1JfT1BFTl9SSUdIVBCACBITCg5FTUVSR0VOQ1lfQkxVRRCAEBIS",
            "Cg1FTUVSR0VOQ1lfUkVEEIAgEhUKEEVNRVJHRU5DWV9ZRUxMT1cQgEAiuAEK",
            "EFZlaGljbGVTdG9wU3RhdGUSCwoHRFJJVklORxAAEgsKB1NUT1BQRUQQARIL",
            "CgdQQVJLSU5HEAISDQoJVFJJR0dFUkVEEAQSFwoTQ09OVEFJTkVSX1RSSUdH",
            "RVJFRBAIEg8KC0FUX0JVU19TVE9QEBASFQoRQVRfQ09OVEFJTkVSX1NUT1AQ",
            "IBIXChNBVF9DSEFSR0lOR19TVEFUSU9OEEASFAoPQVRfUEFSS0lOR19BUkVB",
            "EIABIvwBChZSZWdpc3RlclZlaGljbGVDb21tYW5kEhIKCnZlaGljbGVfaWQY",
            "ASABKA0SFgoOaXNfZWdvX3ZlaGljbGUYAiABKAgSKQoFc3RhdGUYAyABKAsy",
            "Gi5hc21wLnZlaGljbGUuVmVoaWNsZVN0YXRlEkIKCHZlaF90eXBlGAQgASgO",
            "MjAuYXNtcC52ZWhpY2xlLlJlZ2lzdGVyVmVoaWNsZUNvbW1hbmQuVmVoaWNs",
            "ZVR5cGUiRwoLVmVoaWNsZVR5cGUSDQoJVU5ERUZJTkVEEAASEQoNUEFTU0VO",
            "R0VSX0NBUhABEgkKBVRSVUNLEAISCwoHQklDWUNMRRADIkYKGFVucmVnaXN0",
            "ZXJWZWhpY2xlQ29tbWFuZBISCgp2ZWhpY2xlX2lkGAEgASgNEhYKDmlzX2Vn",
            "b192ZWhpY2xlGAIgASgIIm0KFFVwZGF0ZVZlaGljbGVDb21tYW5kEhIKCnZl",
            "aGljbGVfaWQYASABKA0SKQoFc3RhdGUYAiABKAsyGi5hc21wLnZlaGljbGUu",
            "VmVoaWNsZVN0YXRlEhYKDmlzX2Vnb192ZWhpY2xlGAMgASgIIvgBCgdDb21t",
            "YW5kEkgKGHJlZ2lzdGVyX3ZlaGljbGVfY29tbWFuZBhkIAEoCzIkLmFzbXAu",
            "dmVoaWNsZS5SZWdpc3RlclZlaGljbGVDb21tYW5kSAASTAoadW5yZWdpc3Rl",
            "cl92ZWhpY2xlX2NvbW1hbmQYZSABKAsyJi5hc21wLnZlaGljbGUuVW5yZWdp",
            "c3RlclZlaGljbGVDb21tYW5kSAASRAoWdXBkYXRlX3ZlaGljbGVfY29tbWFu",
            "ZBhmIAEoCzIiLmFzbXAudmVoaWNsZS5VcGRhdGVWZWhpY2xlQ29tbWFuZEgA",
            "Qg8KDWNvbW1hbmRfb25lb2YiQgoHTWVzc2FnZRIOCgZ0aW1lX3MYASABKAES",
            "JwoIY29tbWFuZHMYAiADKAsyFS5hc21wLnZlaGljbGUuQ29tbWFuZGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.VehiclePosition), global::Asmp.Vehicle.VehiclePosition.Parser, new[]{ "RoadId", "SFrac", "LaneId", "Px", "Py", "Angle", "Height", "Slope", "Lat", "Lon", "EdgeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.VehicleState), global::Asmp.Vehicle.VehicleState.Parser, new[]{ "Position", "SpeedMps", "Signals", "SignalSum", "Stopstates", "StopstateSum" }, null, new[]{ typeof(global::Asmp.Vehicle.VehicleState.Types.VehicleSignal), typeof(global::Asmp.Vehicle.VehicleState.Types.VehicleStopState) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.RegisterVehicleCommand), global::Asmp.Vehicle.RegisterVehicleCommand.Parser, new[]{ "VehicleId", "IsEgoVehicle", "State", "VehType" }, null, new[]{ typeof(global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.UnregisterVehicleCommand), global::Asmp.Vehicle.UnregisterVehicleCommand.Parser, new[]{ "VehicleId", "IsEgoVehicle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.UpdateVehicleCommand), global::Asmp.Vehicle.UpdateVehicleCommand.Parser, new[]{ "VehicleId", "State", "IsEgoVehicle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.Command), global::Asmp.Vehicle.Command.Parser, new[]{ "RegisterVehicleCommand", "UnregisterVehicleCommand", "UpdateVehicleCommand" }, new[]{ "CommandOneof" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Asmp.Vehicle.Message), global::Asmp.Vehicle.Message.Parser, new[]{ "TimeS", "Commands" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// location description structure for vehicles
  /// </summary>
  public sealed partial class VehiclePosition : pb::IMessage<VehiclePosition>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VehiclePosition> _parser = new pb::MessageParser<VehiclePosition>(() => new VehiclePosition());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VehiclePosition> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehiclePosition() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehiclePosition(VehiclePosition other) : this() {
      roadId_ = other.roadId_;
      sFrac_ = other.sFrac_;
      laneId_ = other.laneId_;
      px_ = other.px_;
      py_ = other.py_;
      angle_ = other.angle_;
      height_ = other.height_;
      slope_ = other.slope_;
      lat_ = other.lat_;
      lon_ = other.lon_;
      edgeId_ = other.edgeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehiclePosition Clone() {
      return new VehiclePosition(this);
    }

    /// <summary>Field number for the "road_id" field.</summary>
    public const int RoadIdFieldNumber = 1;
    private uint roadId_;
    /// <summary>
    /// road id as set by SUMO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint RoadId {
      get { return roadId_; }
      set {
        roadId_ = value;
      }
    }

    /// <summary>Field number for the "s_frac" field.</summary>
    public const int SFracFieldNumber = 2;
    private double sFrac_;
    /// <summary>
    /// longitudinal position (along the road), as fraction of length
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SFrac {
      get { return sFrac_; }
      set {
        sFrac_ = value;
      }
    }

    /// <summary>Field number for the "lane_id" field.</summary>
    public const int LaneIdFieldNumber = 4;
    private uint laneId_;
    /// <summary>
    /// discrete lane id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint LaneId {
      get { return laneId_; }
      set {
        laneId_ = value;
      }
    }

    /// <summary>Field number for the "px" field.</summary>
    public const int PxFieldNumber = 5;
    private double px_;
    /// <summary>
    /// horizontal cartesian coordinate of vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Px {
      get { return px_; }
      set {
        px_ = value;
      }
    }

    /// <summary>Field number for the "py" field.</summary>
    public const int PyFieldNumber = 6;
    private double py_;
    /// <summary>
    /// vertical cartesian coordinate of vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Py {
      get { return py_; }
      set {
        py_ = value;
      }
    }

    /// <summary>Field number for the "angle" field.</summary>
    public const int AngleFieldNumber = 7;
    private double angle_;
    /// <summary>
    /// yaw angle of the vehicle (compass) in degrees (0..359.999, 0 is North)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Angle {
      get { return angle_; }
      set {
        angle_ = value;
      }
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 8;
    private double height_;
    /// <summary>
    /// height in meters above sea level
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "slope" field.</summary>
    public const int SlopeFieldNumber = 9;
    private double slope_;
    /// <summary>
    /// slope of the vehicle in driving direction in degrees (pitch)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Slope {
      get { return slope_; }
      set {
        slope_ = value;
      }
    }

    /// <summary>Field number for the "lat" field.</summary>
    public const int LatFieldNumber = 10;
    private double lat_;
    /// <summary>
    /// latitude of the vehicle (in degrees)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Lat {
      get { return lat_; }
      set {
        lat_ = value;
      }
    }

    /// <summary>Field number for the "lon" field.</summary>
    public const int LonFieldNumber = 11;
    private double lon_;
    /// <summary>
    /// longitude of the vehicle (in degrees)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Lon {
      get { return lon_; }
      set {
        lon_ = value;
      }
    }

    /// <summary>Field number for the "edge_id" field.</summary>
    public const int EdgeIdFieldNumber = 12;
    private string edgeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EdgeId {
      get { return edgeId_; }
      set {
        edgeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VehiclePosition);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VehiclePosition other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoadId != other.RoadId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SFrac, other.SFrac)) return false;
      if (LaneId != other.LaneId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Px, other.Px)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Py, other.Py)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Angle, other.Angle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Height, other.Height)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Slope, other.Slope)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
      if (EdgeId != other.EdgeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoadId != 0) hash ^= RoadId.GetHashCode();
      if (SFrac != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SFrac);
      if (LaneId != 0) hash ^= LaneId.GetHashCode();
      if (Px != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Px);
      if (Py != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Py);
      if (Angle != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Angle);
      if (Height != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Height);
      if (Slope != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Slope);
      if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
      if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
      if (EdgeId.Length != 0) hash ^= EdgeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoadId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoadId);
      }
      if (SFrac != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SFrac);
      }
      if (LaneId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(LaneId);
      }
      if (Px != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Px);
      }
      if (Py != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Py);
      }
      if (Angle != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Angle);
      }
      if (Height != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Height);
      }
      if (Slope != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Slope);
      }
      if (Lat != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Lon);
      }
      if (EdgeId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(EdgeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoadId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(RoadId);
      }
      if (SFrac != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SFrac);
      }
      if (LaneId != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(LaneId);
      }
      if (Px != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(Px);
      }
      if (Py != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(Py);
      }
      if (Angle != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(Angle);
      }
      if (Height != 0D) {
        output.WriteRawTag(65);
        output.WriteDouble(Height);
      }
      if (Slope != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Slope);
      }
      if (Lat != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Lat);
      }
      if (Lon != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Lon);
      }
      if (EdgeId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(EdgeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoadId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(RoadId);
      }
      if (SFrac != 0D) {
        size += 1 + 8;
      }
      if (LaneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LaneId);
      }
      if (Px != 0D) {
        size += 1 + 8;
      }
      if (Py != 0D) {
        size += 1 + 8;
      }
      if (Angle != 0D) {
        size += 1 + 8;
      }
      if (Height != 0D) {
        size += 1 + 8;
      }
      if (Slope != 0D) {
        size += 1 + 8;
      }
      if (Lat != 0D) {
        size += 1 + 8;
      }
      if (Lon != 0D) {
        size += 1 + 8;
      }
      if (EdgeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EdgeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VehiclePosition other) {
      if (other == null) {
        return;
      }
      if (other.RoadId != 0) {
        RoadId = other.RoadId;
      }
      if (other.SFrac != 0D) {
        SFrac = other.SFrac;
      }
      if (other.LaneId != 0) {
        LaneId = other.LaneId;
      }
      if (other.Px != 0D) {
        Px = other.Px;
      }
      if (other.Py != 0D) {
        Py = other.Py;
      }
      if (other.Angle != 0D) {
        Angle = other.Angle;
      }
      if (other.Height != 0D) {
        Height = other.Height;
      }
      if (other.Slope != 0D) {
        Slope = other.Slope;
      }
      if (other.Lat != 0D) {
        Lat = other.Lat;
      }
      if (other.Lon != 0D) {
        Lon = other.Lon;
      }
      if (other.EdgeId.Length != 0) {
        EdgeId = other.EdgeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoadId = input.ReadUInt32();
            break;
          }
          case 17: {
            SFrac = input.ReadDouble();
            break;
          }
          case 32: {
            LaneId = input.ReadUInt32();
            break;
          }
          case 41: {
            Px = input.ReadDouble();
            break;
          }
          case 49: {
            Py = input.ReadDouble();
            break;
          }
          case 57: {
            Angle = input.ReadDouble();
            break;
          }
          case 65: {
            Height = input.ReadDouble();
            break;
          }
          case 73: {
            Slope = input.ReadDouble();
            break;
          }
          case 81: {
            Lat = input.ReadDouble();
            break;
          }
          case 89: {
            Lon = input.ReadDouble();
            break;
          }
          case 98: {
            EdgeId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoadId = input.ReadUInt32();
            break;
          }
          case 17: {
            SFrac = input.ReadDouble();
            break;
          }
          case 32: {
            LaneId = input.ReadUInt32();
            break;
          }
          case 41: {
            Px = input.ReadDouble();
            break;
          }
          case 49: {
            Py = input.ReadDouble();
            break;
          }
          case 57: {
            Angle = input.ReadDouble();
            break;
          }
          case 65: {
            Height = input.ReadDouble();
            break;
          }
          case 73: {
            Slope = input.ReadDouble();
            break;
          }
          case 81: {
            Lat = input.ReadDouble();
            break;
          }
          case 89: {
            Lon = input.ReadDouble();
            break;
          }
          case 98: {
            EdgeId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// complete state record of a vehicle
  /// </summary>
  public sealed partial class VehicleState : pb::IMessage<VehicleState>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VehicleState> _parser = new pb::MessageParser<VehicleState>(() => new VehicleState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VehicleState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleState(VehicleState other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      speedMps_ = other.speedMps_;
      signals_ = other.signals_.Clone();
      signalSum_ = other.signalSum_;
      stopstates_ = other.stopstates_.Clone();
      stopstateSum_ = other.stopstateSum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleState Clone() {
      return new VehicleState(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Asmp.Vehicle.VehiclePosition position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.VehiclePosition Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "speed_mps" field.</summary>
    public const int SpeedMpsFieldNumber = 2;
    private double speedMps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double SpeedMps {
      get { return speedMps_; }
      set {
        speedMps_ = value;
      }
    }

    /// <summary>Field number for the "signals" field.</summary>
    public const int SignalsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Asmp.Vehicle.VehicleState.Types.VehicleSignal> _repeated_signals_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Asmp.Vehicle.VehicleState.Types.VehicleSignal) x);
    private readonly pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleSignal> signals_ = new pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleSignal>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleSignal> Signals {
      get { return signals_; }
    }

    /// <summary>Field number for the "signal_sum" field.</summary>
    public const int SignalSumFieldNumber = 4;
    private uint signalSum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint SignalSum {
      get { return signalSum_; }
      set {
        signalSum_ = value;
      }
    }

    /// <summary>Field number for the "stopstates" field.</summary>
    public const int StopstatesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Asmp.Vehicle.VehicleState.Types.VehicleStopState> _repeated_stopstates_codec
        = pb::FieldCodec.ForEnum(42, x => (int) x, x => (global::Asmp.Vehicle.VehicleState.Types.VehicleStopState) x);
    private readonly pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleStopState> stopstates_ = new pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleStopState>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Asmp.Vehicle.VehicleState.Types.VehicleStopState> Stopstates {
      get { return stopstates_; }
    }

    /// <summary>Field number for the "stopstate_sum" field.</summary>
    public const int StopstateSumFieldNumber = 6;
    private uint stopstateSum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StopstateSum {
      get { return stopstateSum_; }
      set {
        stopstateSum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VehicleState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VehicleState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(SpeedMps, other.SpeedMps)) return false;
      if(!signals_.Equals(other.signals_)) return false;
      if (SignalSum != other.SignalSum) return false;
      if(!stopstates_.Equals(other.stopstates_)) return false;
      if (StopstateSum != other.StopstateSum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (SpeedMps != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(SpeedMps);
      hash ^= signals_.GetHashCode();
      if (SignalSum != 0) hash ^= SignalSum.GetHashCode();
      hash ^= stopstates_.GetHashCode();
      if (StopstateSum != 0) hash ^= StopstateSum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (SpeedMps != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SpeedMps);
      }
      signals_.WriteTo(output, _repeated_signals_codec);
      if (SignalSum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SignalSum);
      }
      stopstates_.WriteTo(output, _repeated_stopstates_codec);
      if (StopstateSum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StopstateSum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (SpeedMps != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(SpeedMps);
      }
      signals_.WriteTo(ref output, _repeated_signals_codec);
      if (SignalSum != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(SignalSum);
      }
      stopstates_.WriteTo(ref output, _repeated_stopstates_codec);
      if (StopstateSum != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(StopstateSum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (SpeedMps != 0D) {
        size += 1 + 8;
      }
      size += signals_.CalculateSize(_repeated_signals_codec);
      if (SignalSum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SignalSum);
      }
      size += stopstates_.CalculateSize(_repeated_stopstates_codec);
      if (StopstateSum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StopstateSum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VehicleState other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Asmp.Vehicle.VehiclePosition();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.SpeedMps != 0D) {
        SpeedMps = other.SpeedMps;
      }
      signals_.Add(other.signals_);
      if (other.SignalSum != 0) {
        SignalSum = other.SignalSum;
      }
      stopstates_.Add(other.stopstates_);
      if (other.StopstateSum != 0) {
        StopstateSum = other.StopstateSum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Asmp.Vehicle.VehiclePosition();
            }
            input.ReadMessage(Position);
            break;
          }
          case 17: {
            SpeedMps = input.ReadDouble();
            break;
          }
          case 26:
          case 24: {
            signals_.AddEntriesFrom(input, _repeated_signals_codec);
            break;
          }
          case 32: {
            SignalSum = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            stopstates_.AddEntriesFrom(input, _repeated_stopstates_codec);
            break;
          }
          case 48: {
            StopstateSum = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Asmp.Vehicle.VehiclePosition();
            }
            input.ReadMessage(Position);
            break;
          }
          case 17: {
            SpeedMps = input.ReadDouble();
            break;
          }
          case 26:
          case 24: {
            signals_.AddEntriesFrom(ref input, _repeated_signals_codec);
            break;
          }
          case 32: {
            SignalSum = input.ReadUInt32();
            break;
          }
          case 42:
          case 40: {
            stopstates_.AddEntriesFrom(ref input, _repeated_stopstates_codec);
            break;
          }
          case 48: {
            StopstateSum = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the VehicleState message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// vehicle indication signals
      /// </summary>
      public enum VehicleSignal {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("BLINKER_RIGHT")] BlinkerRight = 1,
        [pbr::OriginalName("BLINKER_LEFT")] BlinkerLeft = 2,
        [pbr::OriginalName("BLINKER_EMERGENCY")] BlinkerEmergency = 4,
        [pbr::OriginalName("BREAKLIGHT")] Breaklight = 8,
        [pbr::OriginalName("FRONTLIGHT")] Frontlight = 16,
        [pbr::OriginalName("FOGLIGHT")] Foglight = 32,
        [pbr::OriginalName("HIGHBEAM")] Highbeam = 64,
        [pbr::OriginalName("BACKDRIVE")] Backdrive = 128,
        [pbr::OriginalName("WIPER")] Wiper = 256,
        [pbr::OriginalName("DOOR_OPEN_LEFT")] DoorOpenLeft = 512,
        [pbr::OriginalName("DOOR_OPEN_RIGHT")] DoorOpenRight = 1024,
        [pbr::OriginalName("EMERGENCY_BLUE")] EmergencyBlue = 2048,
        [pbr::OriginalName("EMERGENCY_RED")] EmergencyRed = 4096,
        [pbr::OriginalName("EMERGENCY_YELLOW")] EmergencyYellow = 8192,
      }

      public enum VehicleStopState {
        [pbr::OriginalName("DRIVING")] Driving = 0,
        [pbr::OriginalName("STOPPED")] Stopped = 1,
        [pbr::OriginalName("PARKING")] Parking = 2,
        [pbr::OriginalName("TRIGGERED")] Triggered = 4,
        [pbr::OriginalName("CONTAINER_TRIGGERED")] ContainerTriggered = 8,
        [pbr::OriginalName("AT_BUS_STOP")] AtBusStop = 16,
        [pbr::OriginalName("AT_CONTAINER_STOP")] AtContainerStop = 32,
        [pbr::OriginalName("AT_CHARGING_STATION")] AtChargingStation = 64,
        [pbr::OriginalName("AT_PARKING_AREA")] AtParkingArea = 128,
      }

    }
    #endregion

  }

  /// <summary>
  /// registration of a new vehicle
  /// (Veins asks ASM to register a vehicle)
  /// </summary>
  public sealed partial class RegisterVehicleCommand : pb::IMessage<RegisterVehicleCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegisterVehicleCommand> _parser = new pb::MessageParser<RegisterVehicleCommand>(() => new RegisterVehicleCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegisterVehicleCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterVehicleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterVehicleCommand(RegisterVehicleCommand other) : this() {
      vehicleId_ = other.vehicleId_;
      isEgoVehicle_ = other.isEgoVehicle_;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      vehType_ = other.vehType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegisterVehicleCommand Clone() {
      return new RegisterVehicleCommand(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private uint vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    /// <summary>Field number for the "is_ego_vehicle" field.</summary>
    public const int IsEgoVehicleFieldNumber = 2;
    private bool isEgoVehicle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEgoVehicle {
      get { return isEgoVehicle_; }
      set {
        isEgoVehicle_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Asmp.Vehicle.VehicleState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.VehicleState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "veh_type" field.</summary>
    public const int VehTypeFieldNumber = 4;
    private global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType vehType_ = global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType VehType {
      get { return vehType_; }
      set {
        vehType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegisterVehicleCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegisterVehicleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      if (IsEgoVehicle != other.IsEgoVehicle) return false;
      if (!object.Equals(State, other.State)) return false;
      if (VehType != other.VehType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId != 0) hash ^= VehicleId.GetHashCode();
      if (IsEgoVehicle != false) hash ^= IsEgoVehicle.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (VehType != global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined) hash ^= VehType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEgoVehicle);
      }
      if (state_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(State);
      }
      if (VehType != global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VehType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEgoVehicle);
      }
      if (state_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(State);
      }
      if (VehType != global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined) {
        output.WriteRawTag(32);
        output.WriteEnum((int) VehType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VehicleId);
      }
      if (IsEgoVehicle != false) {
        size += 1 + 1;
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (VehType != global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VehType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegisterVehicleCommand other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId != 0) {
        VehicleId = other.VehicleId;
      }
      if (other.IsEgoVehicle != false) {
        IsEgoVehicle = other.IsEgoVehicle;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Asmp.Vehicle.VehicleState();
        }
        State.MergeFrom(other.State);
      }
      if (other.VehType != global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType.Undefined) {
        VehType = other.VehType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
          case 26: {
            if (state_ == null) {
              State = new global::Asmp.Vehicle.VehicleState();
            }
            input.ReadMessage(State);
            break;
          }
          case 32: {
            VehType = (global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
          case 26: {
            if (state_ == null) {
              State = new global::Asmp.Vehicle.VehicleState();
            }
            input.ReadMessage(State);
            break;
          }
          case 32: {
            VehType = (global::Asmp.Vehicle.RegisterVehicleCommand.Types.VehicleType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterVehicleCommand message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// macroscopic types of vehicles
      /// </summary>
      public enum VehicleType {
        [pbr::OriginalName("UNDEFINED")] Undefined = 0,
        [pbr::OriginalName("PASSENGER_CAR")] PassengerCar = 1,
        [pbr::OriginalName("TRUCK")] Truck = 2,
        [pbr::OriginalName("BICYCLE")] Bicycle = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// removal of a known vehicle
  /// Veins asks ASM to unregister a vehicle
  /// </summary>
  public sealed partial class UnregisterVehicleCommand : pb::IMessage<UnregisterVehicleCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnregisterVehicleCommand> _parser = new pb::MessageParser<UnregisterVehicleCommand>(() => new UnregisterVehicleCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnregisterVehicleCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterVehicleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterVehicleCommand(UnregisterVehicleCommand other) : this() {
      vehicleId_ = other.vehicleId_;
      isEgoVehicle_ = other.isEgoVehicle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnregisterVehicleCommand Clone() {
      return new UnregisterVehicleCommand(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private uint vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    /// <summary>Field number for the "is_ego_vehicle" field.</summary>
    public const int IsEgoVehicleFieldNumber = 2;
    private bool isEgoVehicle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEgoVehicle {
      get { return isEgoVehicle_; }
      set {
        isEgoVehicle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnregisterVehicleCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnregisterVehicleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      if (IsEgoVehicle != other.IsEgoVehicle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId != 0) hash ^= VehicleId.GetHashCode();
      if (IsEgoVehicle != false) hash ^= IsEgoVehicle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEgoVehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEgoVehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VehicleId);
      }
      if (IsEgoVehicle != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnregisterVehicleCommand other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId != 0) {
        VehicleId = other.VehicleId;
      }
      if (other.IsEgoVehicle != false) {
        IsEgoVehicle = other.IsEgoVehicle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 16: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// update of known vehicle's state
  /// (ASM lets Veins know about vehicle's position)
  /// </summary>
  public sealed partial class UpdateVehicleCommand : pb::IMessage<UpdateVehicleCommand>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UpdateVehicleCommand> _parser = new pb::MessageParser<UpdateVehicleCommand>(() => new UpdateVehicleCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UpdateVehicleCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVehicleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVehicleCommand(UpdateVehicleCommand other) : this() {
      vehicleId_ = other.vehicleId_;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      isEgoVehicle_ = other.isEgoVehicle_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UpdateVehicleCommand Clone() {
      return new UpdateVehicleCommand(this);
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 1;
    private uint vehicleId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Asmp.Vehicle.VehicleState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.VehicleState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "is_ego_vehicle" field.</summary>
    public const int IsEgoVehicleFieldNumber = 3;
    private bool isEgoVehicle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEgoVehicle {
      get { return isEgoVehicle_; }
      set {
        isEgoVehicle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UpdateVehicleCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UpdateVehicleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VehicleId != other.VehicleId) return false;
      if (!object.Equals(State, other.State)) return false;
      if (IsEgoVehicle != other.IsEgoVehicle) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (VehicleId != 0) hash ^= VehicleId.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (IsEgoVehicle != false) hash ^= IsEgoVehicle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (state_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEgoVehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (VehicleId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VehicleId);
      }
      if (state_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (IsEgoVehicle != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsEgoVehicle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (VehicleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VehicleId);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (IsEgoVehicle != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UpdateVehicleCommand other) {
      if (other == null) {
        return;
      }
      if (other.VehicleId != 0) {
        VehicleId = other.VehicleId;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Asmp.Vehicle.VehicleState();
        }
        State.MergeFrom(other.State);
      }
      if (other.IsEgoVehicle != false) {
        IsEgoVehicle = other.IsEgoVehicle;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (state_ == null) {
              State = new global::Asmp.Vehicle.VehicleState();
            }
            input.ReadMessage(State);
            break;
          }
          case 24: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            VehicleId = input.ReadUInt32();
            break;
          }
          case 18: {
            if (state_ == null) {
              State = new global::Asmp.Vehicle.VehicleState();
            }
            input.ReadMessage(State);
            break;
          }
          case 24: {
            IsEgoVehicle = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// wrapper message for vehicles commands
  /// </summary>
  public sealed partial class Command : pb::IMessage<Command>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command(Command other) : this() {
      switch (other.CommandOneofCase) {
        case CommandOneofOneofCase.RegisterVehicleCommand:
          RegisterVehicleCommand = other.RegisterVehicleCommand.Clone();
          break;
        case CommandOneofOneofCase.UnregisterVehicleCommand:
          UnregisterVehicleCommand = other.UnregisterVehicleCommand.Clone();
          break;
        case CommandOneofOneofCase.UpdateVehicleCommand:
          UpdateVehicleCommand = other.UpdateVehicleCommand.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "register_vehicle_command" field.</summary>
    public const int RegisterVehicleCommandFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.RegisterVehicleCommand RegisterVehicleCommand {
      get { return commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand ? (global::Asmp.Vehicle.RegisterVehicleCommand) commandOneof_ : null; }
      set {
        commandOneof_ = value;
        commandOneofCase_ = value == null ? CommandOneofOneofCase.None : CommandOneofOneofCase.RegisterVehicleCommand;
      }
    }

    /// <summary>Field number for the "unregister_vehicle_command" field.</summary>
    public const int UnregisterVehicleCommandFieldNumber = 101;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.UnregisterVehicleCommand UnregisterVehicleCommand {
      get { return commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand ? (global::Asmp.Vehicle.UnregisterVehicleCommand) commandOneof_ : null; }
      set {
        commandOneof_ = value;
        commandOneofCase_ = value == null ? CommandOneofOneofCase.None : CommandOneofOneofCase.UnregisterVehicleCommand;
      }
    }

    /// <summary>Field number for the "update_vehicle_command" field.</summary>
    public const int UpdateVehicleCommandFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Asmp.Vehicle.UpdateVehicleCommand UpdateVehicleCommand {
      get { return commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand ? (global::Asmp.Vehicle.UpdateVehicleCommand) commandOneof_ : null; }
      set {
        commandOneof_ = value;
        commandOneofCase_ = value == null ? CommandOneofOneofCase.None : CommandOneofOneofCase.UpdateVehicleCommand;
      }
    }

    private object commandOneof_;
    /// <summary>Enum of possible cases for the "command_oneof" oneof.</summary>
    public enum CommandOneofOneofCase {
      None = 0,
      RegisterVehicleCommand = 100,
      UnregisterVehicleCommand = 101,
      UpdateVehicleCommand = 102,
    }
    private CommandOneofOneofCase commandOneofCase_ = CommandOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CommandOneofOneofCase CommandOneofCase {
      get { return commandOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearCommandOneof() {
      commandOneofCase_ = CommandOneofOneofCase.None;
      commandOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RegisterVehicleCommand, other.RegisterVehicleCommand)) return false;
      if (!object.Equals(UnregisterVehicleCommand, other.UnregisterVehicleCommand)) return false;
      if (!object.Equals(UpdateVehicleCommand, other.UpdateVehicleCommand)) return false;
      if (CommandOneofCase != other.CommandOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) hash ^= RegisterVehicleCommand.GetHashCode();
      if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) hash ^= UnregisterVehicleCommand.GetHashCode();
      if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) hash ^= UpdateVehicleCommand.GetHashCode();
      hash ^= (int) commandOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(RegisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(UnregisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(UpdateVehicleCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(RegisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(UnregisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(UpdateVehicleCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RegisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnregisterVehicleCommand);
      }
      if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdateVehicleCommand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      switch (other.CommandOneofCase) {
        case CommandOneofOneofCase.RegisterVehicleCommand:
          if (RegisterVehicleCommand == null) {
            RegisterVehicleCommand = new global::Asmp.Vehicle.RegisterVehicleCommand();
          }
          RegisterVehicleCommand.MergeFrom(other.RegisterVehicleCommand);
          break;
        case CommandOneofOneofCase.UnregisterVehicleCommand:
          if (UnregisterVehicleCommand == null) {
            UnregisterVehicleCommand = new global::Asmp.Vehicle.UnregisterVehicleCommand();
          }
          UnregisterVehicleCommand.MergeFrom(other.UnregisterVehicleCommand);
          break;
        case CommandOneofOneofCase.UpdateVehicleCommand:
          if (UpdateVehicleCommand == null) {
            UpdateVehicleCommand = new global::Asmp.Vehicle.UpdateVehicleCommand();
          }
          UpdateVehicleCommand.MergeFrom(other.UpdateVehicleCommand);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 802: {
            global::Asmp.Vehicle.RegisterVehicleCommand subBuilder = new global::Asmp.Vehicle.RegisterVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) {
              subBuilder.MergeFrom(RegisterVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            RegisterVehicleCommand = subBuilder;
            break;
          }
          case 810: {
            global::Asmp.Vehicle.UnregisterVehicleCommand subBuilder = new global::Asmp.Vehicle.UnregisterVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) {
              subBuilder.MergeFrom(UnregisterVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            UnregisterVehicleCommand = subBuilder;
            break;
          }
          case 818: {
            global::Asmp.Vehicle.UpdateVehicleCommand subBuilder = new global::Asmp.Vehicle.UpdateVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) {
              subBuilder.MergeFrom(UpdateVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            UpdateVehicleCommand = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 802: {
            global::Asmp.Vehicle.RegisterVehicleCommand subBuilder = new global::Asmp.Vehicle.RegisterVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.RegisterVehicleCommand) {
              subBuilder.MergeFrom(RegisterVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            RegisterVehicleCommand = subBuilder;
            break;
          }
          case 810: {
            global::Asmp.Vehicle.UnregisterVehicleCommand subBuilder = new global::Asmp.Vehicle.UnregisterVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.UnregisterVehicleCommand) {
              subBuilder.MergeFrom(UnregisterVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            UnregisterVehicleCommand = subBuilder;
            break;
          }
          case 818: {
            global::Asmp.Vehicle.UpdateVehicleCommand subBuilder = new global::Asmp.Vehicle.UpdateVehicleCommand();
            if (commandOneofCase_ == CommandOneofOneofCase.UpdateVehicleCommand) {
              subBuilder.MergeFrom(UpdateVehicleCommand);
            }
            input.ReadMessage(subBuilder);
            UpdateVehicleCommand = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// traffic synchronization update wrapper
  /// sequence of commands with a common timestamp
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Asmp.Vehicle.VehicleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message(Message other) : this() {
      timeS_ = other.timeS_;
      commands_ = other.commands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "time_s" field.</summary>
    public const int TimeSFieldNumber = 1;
    private double timeS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double TimeS {
      get { return timeS_; }
      set {
        timeS_ = value;
      }
    }

    /// <summary>Field number for the "commands" field.</summary>
    public const int CommandsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Asmp.Vehicle.Command> _repeated_commands_codec
        = pb::FieldCodec.ForMessage(18, global::Asmp.Vehicle.Command.Parser);
    private readonly pbc::RepeatedField<global::Asmp.Vehicle.Command> commands_ = new pbc::RepeatedField<global::Asmp.Vehicle.Command>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Asmp.Vehicle.Command> Commands {
      get { return commands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TimeS, other.TimeS)) return false;
      if(!commands_.Equals(other.commands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeS != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TimeS);
      hash ^= commands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeS);
      }
      commands_.WriteTo(output, _repeated_commands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeS != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(TimeS);
      }
      commands_.WriteTo(ref output, _repeated_commands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeS != 0D) {
        size += 1 + 8;
      }
      size += commands_.CalculateSize(_repeated_commands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.TimeS != 0D) {
        TimeS = other.TimeS;
      }
      commands_.Add(other.commands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            TimeS = input.ReadDouble();
            break;
          }
          case 18: {
            commands_.AddEntriesFrom(input, _repeated_commands_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            TimeS = input.ReadDouble();
            break;
          }
          case 18: {
            commands_.AddEntriesFrom(ref input, _repeated_commands_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
